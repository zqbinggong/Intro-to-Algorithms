import java.util.Random;

//对区间的模糊排序
/*
1. Find-Intersection(A,B,p,s,m,n):寻找并返回（A,B)中p到s段的公共子集(m,n)
2. Partition-Right(A,B,p,s,m):根据a，对（A,B）排序，返回排序后a的下一位置
3. Partition-Left(A,B,p,s,n):根据a，对（A,B）排序，返回排序后b的下一位置
4. Fuzzy-Sort(A,B,p,s)
*/
public class FuzzySort {
	public static void fuzzySort(int[] a, int[] b, int p, int s){
		if(p < s){
			int m = 0, n = 0;
			findIntersection(a,b,p,s,m,n);
			int r = partitionRight(a,b,m,p,s);
			int q = partitionLeft(a,b,n,p,s);
			fuzzySort(a,b,p,q-1);
			fuzzySort(a,b,r+1,s);
		}
	}

	private static void findIntersection(int[] a, int[] b, int p, int s, int m,
			int n) {
		// TODO Auto-generated method stub
		int i = (int) Math.round(Math.random()*(s-p)+p);
		
		
	}

}
