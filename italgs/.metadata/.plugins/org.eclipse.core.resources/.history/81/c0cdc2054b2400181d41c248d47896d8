
public class SelectOrder {
	
	//期望为线性时间的选择算法
	public static int randomSelect(int[] a, int p, int r, int i){
		if(p == r) return a[p];
		int q = randomPartition(a,p,r);
		int k = q-p+1;
		if(i == k) return a[i];
		else if(i < k) return randomSelect(a, p, q-1, i);
		else return randomSelect(a, q+1, r, i);
		
	}

	private static int randomPartition(int[] a, int p, int r) {
		// TODO Auto-generated method stub
		int m = (int) Math.round(Math.random()*(r-p)+p);
		int x = a[m];
		swap(a,m,r);
		int j = p-1;
		for(int l = 0; l < r; l++){
			if(a[l] <= x){
				swap(a,l,++j);
			}
		}
		swap(a,r,++j);
		return j;
	}

	private static void swap(int[] arr, int i, int j) {
		// TODO Auto-generated method stub
		int temp = arr[i];
		arr[i] = arr[j];
		arr[j] = temp;
	}

}
